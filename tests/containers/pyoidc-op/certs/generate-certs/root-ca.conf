[ default ]
ca                      = root-ca
dir                     = .

[ req ]
default_bits            = 2048
encrypt_key             = no
default_md              = sha256
utf8                    = yes
string_mask             = utf8only
prompt                  = no
distinguished_name      = ca_dn
req_extensions          = ca_reqext

[ ca_dn ]
0.domainComponent       = "io"
1.domainComponent       = "los-pollos"
organizationName        = "Bouncer OIDC unit Test"
organizationalUnitName  = "Bouncer OIDC unit Test Simple Root CA"
commonName              = "Bouncer OIDC unit Test Simple Root CA"

[ ca_reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash

[ ca ]
default_ca              = root_ca

[ root_ca ]
certificate             = $dir/ca/$ca.crt
private_key             = $dir/ca/$ca/private/$ca.key
new_certs_dir           = $dir/ca/$ca
serial                  = $dir/ca/$ca/db/$ca.crt.srl
crlnumber               = $dir/ca/$ca/db/$ca.crl.srl
database                = $dir/ca/$ca/db/$ca.db
unique_subject          = no
default_days            = 3652
default_md              = sha256
policy                  = match_pol
email_in_dn             = no
preserve                = yes
name_opt                = ca_default
cert_opt                = ca_default
copy_extensions         = none
x509_extensions         = signing_ca_ext
default_crl_days        = 365
crl_extensions          = crl_ext

[ match_pol ]
domainComponent         = match
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
